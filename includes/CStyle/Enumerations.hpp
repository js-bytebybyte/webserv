#pragma once

/*
	Define all the enumerations used in the project
*/
enum	httpMethod
{
	GET = 4,
	POST,
	DELETE
};

enum	informationalStatusCode
{
	UNDEFINED = 0,
	CONTINUE = 100,
	SWITCHING_PROTOCOLS,
	PROCESSING,
	EARLY_HINTS,

};

enum	succesStatusCode
{
	OK = 200,
	CREATED,
	ACCEPTED,
	NON_AUTHORITATIVE_INFO,
	NO_CONTENT,
	RESET_CONTENT,
	PARTIAL_CONTENT,
	MULTI_STATUS,
	ALREADY_REPORTED,
	IM_USED = 226,
};

enum	redirectionStatusCode
{
	MULTIPLE_CHOISE = 300,
	MOVED_PERMANENT,
	FOUND,
	SEE_OTHER,
	NOT_MODIFIED,
	USE_PROXY,
	SWITCH_PROXY,
	TEMPORARY_REDIRECT,
	PERMANENT_REDIRECT,
};

enum	clientErrorStatusCode
{
	BAD_REQUEST = 400,
	UNAUTHORIZED,
	PAYMENTREQUIRED,
	FORBIDDEN,
	NOTFOUND,
	METHOD_NOT_ALLOWED,
	NOT_ACCEPTABLE,
	PROXY_AUTHENTICATION_REQUIRED,
	REQUEST_TIMEOUT,
	CONFILCT,
	GONE,
	LENGTH_REQUIRED,
	PRECONDITION_FAILED,
	PAYLOAD_TOO_LARGE,
	URI_TOO_LONG,
	UNSUPPORTED_MEDIA_TYPE,
	RANGE_NOT_SATISFIABLE,
	EXPECTATION_FAILED,
	IM_A_TEAPOT,
	MISDIRECTED_REQUEST = 421,
	UNPROCESSABLE_ENTITY,
	LOCKED,
	FAILED_DEPENDENCY,
	TOO_EARLY,
	UPGRADE_REQUIRED,
	PRECONDITION_REQUIRED = 428,
	TOO_MANY_REQUESTS,
	REQUEST_HEADER_FIELDS_TOO_LARGE = 431,
	UNAVAILABLE_FOR_LEGAL_REASONS = 451
};

enum	serverErrorStatusCode
{
	INTERNAL_SERVER_ERROR = 500,
	NOT_IMPLEMENTED,
	BAD_GATEWAY,
	SERVICE_UNAVAILABLE,
	GATEWAY_TIMEOUT,
	HTTP_VERSION_NOT_SUPPORTED,
	VARIANT_ALSO_NEGOTIATES,
	INSUFFICIENT_STORAGE,
	LOOP_DETECTED,
	NOT_EXTENDED = 510,
	NETWORK_AUTHENTICATION_REQUIRED,
};

enum	ErrorRespoonse
{
	// which enum error ;
	serverErrorStatusCode = 1,
	clientErrorStatusCode,
};
